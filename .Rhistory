library(sqldf)
setwd('/home/aman/Documents/learn/kaggle/Employee_Access_Challenge/')
train <- read.csv('./train.csv', colClasses = c('integer', rep('factor', 9)))
test <- read.csv('./test.csv', colClasses)
sum(train$ACTION)/length(train$ACTION) #turns out to be 94.21% hence data totally skewed
unique(train$ACTION)
?apply
uniqueCount = function(column){
length(unique(column))
}
apply(train, 2, uniqueCount)
typeof(train$ROLE_CODE)
levels(train$ROLE_CODE)
library(sqldf)
setwd('/home/aman/Documents/learn/kaggle/Employee_Access_Challenge/')
train <- read.csv('./train.csv', colClasses = c('integer', rep('factor', 9)))
test <- read.csv('./test.csv', colClasses)
sum(train$ACTION)/length(train$ACTION) #turns out to be 94.21% hence data totally skewed
uniqueCount = function(column){
length(unique(column))
}
apply(train, 2, uniqueCount)
sqldf("select * from train")
typeof(sqldf("select * from train"))
library(plyr)
library(sqldf)
library(plyr)
setwd('/home/aman/Documents/learn/kaggle/Employee_Access_Challenge/')
train <- read.table('./train.csv', header = TRUE,  colClasses = c('integer'), sep = ",")
test <- read.csv('./test.csv', colClasses)
plot(train$ROLE_TITLE, train$ROLE_CODE)
install.packages('ROCR')
version
?prediction
??prediction
library(ROCR)
?prediction
?performance
?paste
paste(train$ROLE_CODE, train$ROLE_TITLE)
?sapply
sapply(train, function(x) {})
sapply(train, function(x) {length(unique(x))})
train[, 1]
table(train[,1])
table(train[,2])
sort(table(train[,2]), decreasing = T)
sort(table(train[,2]), decreasing = T)[1:2]
names(sort(table(train[,2]), decreasing = T)[1:2])
?names
x[,1]
x  = train
x[,1]
!x[,1]
!x[,2]
sum(!x[,2])
x[!x[,1] %in% the_label, 1]
the_names <l- names(sort(table(train[,2]), decreasing = T)[1:2])
the_names <- names(sort(table(train[,2]), decreasing = T)[1:2])
the_names
the_names <- names(sort(table(train[,1]), decreasing = T)[1:2])
the_names
x[!x[,1] %in% the_label, 1]
x[!x[,1] %in% the_names, 1]
the_names <- names(sort(table(train[,2]), decreasing = T)[1:2])
the_names
x[!x[,2] %in% the_names, 1]
x[!x[,2] %in% the_names, 2]
!x[,2] %in% the_names
x
View(x)
for(i in 1:ncol(x)) {
the_names <- names(sort(table(train[,2]), decreasing = T)[1:2])
x[!x[,1] %in% the_names, 1] <- 'other'
}
x[!x[,1] %in% the_names, 1]
View(x)
x <- train
for(i in 1:ncol(x)) {
the_names <- names(sort(table(train[,2]), decreasing = T)[1:2])
x[!x[,i] %in% the_names, i] <- 'other'
}
View(x)
x <- train
for(i in 1:ncol(x)) {
the_names <- names(sort(table(train[,i]), decreasing = T)[1:2])
x[!x[,i] %in% the_names, i] <- 'other'
}
View(x)
